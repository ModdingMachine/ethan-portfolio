import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { useState, useEffect } from "react";
import { sendChatMessage } from "@/lib/chat";

export const AboutSection = () => {
  const [bioContent, setBioContent] = useState<string[]>([]);
  const [displayedContent, setDisplayedContent] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isStreaming, setIsStreaming] = useState(false);

  useEffect(() => {
    const generateBio = async () => {
      setIsLoading(true);
      const response = await sendChatMessage(
        "Generate a 3 paragraph bio for Ethan's website, two sentences per paragraph, conclude the final paragraph with this sentence: This bio was generated by AI and is different every time the website loads. Do not include any intro outro or commentary, just the bio."
      );
      
      
      // Split the response into paragraphs and clean up markdown
      const paragraphs = response
        .split(/\n\s*\n/)
        .map(p => p.trim())
        .filter(p => p.length > 0)
        .map(p => p.replace(/\*\*/g, '')); // Remove bold markdown
      
      setBioContent(paragraphs);
      setIsLoading(false);
      setIsStreaming(true);
    };

    generateBio();
  }, []);

  // Streaming effect
  useEffect(() => {
    if (!isStreaming || bioContent.length === 0) return;

    const streamText = async () => {
      const newDisplayedContent: string[] = new Array(bioContent.length).fill('');
      
      for (let paragraphIndex = 0; paragraphIndex < bioContent.length; paragraphIndex++) {
        const paragraph = bioContent[paragraphIndex];
        
        for (let charIndex = 0; charIndex < paragraph.length; charIndex++) {
          newDisplayedContent[paragraphIndex] = paragraph.substring(0, charIndex + 1);
          setDisplayedContent([...newDisplayedContent]);
          
          // Add a small delay between characters for natural typing effect
          await new Promise(resolve => setTimeout(resolve, 20));
        }
        
        // Add a longer pause between paragraphs
        await new Promise(resolve => setTimeout(resolve, 500));
      }
      
      setIsStreaming(false);
    };

    streamText();
  }, [isStreaming, bioContent]);

  return (
    <section id="about" className="py-24 px-6 bg-apple-bg-primary">
      <div className="max-w-6xl mx-auto">
        {/* Section Header - Apple-style */}
        <div className="text-center mb-20">
          <h2 className="text-apple-headline font-bold mb-8 tracking-tight">
            About <span className="text-apple-text-primary">Me</span>
          </h2>
          <p className="text-apple-subtitle text-apple-text-secondary max-w-4xl mx-auto font-light leading-relaxed">
            Passionate technologist with a focus on AI automation and innovative engineering solutions
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-6 md:gap-8 items-start">
          {/* About Content - Apple-style typography */}
          <div className="space-apple-lg">
            {isLoading ? (
              // Loading state with skeleton paragraphs
              <>
                <div className="animate-pulse">
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4"></div>
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4 w-5/6"></div>
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4 w-4/6"></div>
                </div>
                <div className="animate-pulse">
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4"></div>
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4 w-5/6"></div>
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4 w-4/6"></div>
                </div>
                <div className="animate-pulse">
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4"></div>
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4 w-5/6"></div>
                  <div className="h-4 bg-apple-bg-secondary rounded mb-4 w-4/6"></div>
                </div>
              </>
            ) : (
              // Streamed bio content
              displayedContent.map((paragraph, index) => (
                <p key={index} className="text-apple-body leading-relaxed text-apple-text-secondary font-light">
                  {paragraph}
                </p>
              ))
            )}

            {/* Current Focus - Apple-style card */}
            <div className="card-apple-subtle">
              <h3 className="text-apple-title font-semibold mb-6 text-apple-text-primary">Current Focus</h3>
              <div className="flex flex-wrap space-apple-sm">
                <Badge className="badge-apple-primary">AI Automation</Badge>
                <Badge className="badge-apple-primary">AutoCAD Integration</Badge>
                <Badge className="badge-apple-primary">Python Scripting</Badge>
                <Badge className="badge-apple-primary">IoT Development</Badge>
              </div>
            </div>
          </div>

          {/* Stats & Highlights - Apple-style cards */}
          <div className="space-y-8">
            <Card className="card-apple">
              <h3 className="text-apple-title font-semibold mb-6 text-apple-text-primary">Professional Highlights</h3>
              <div className="space-apple-md">
                <div className="flex justify-between items-center py-2 border-b border-apple-border-primary">
                  <span className="text-apple-text-secondary font-medium">Years of Experience</span>
                  <span className="font-semibold text-apple-blue text-lg">5+</span>
                </div>
                <div className="flex justify-between items-center py-2 border-b border-apple-border-primary">
                  <span className="text-apple-text-secondary font-medium">Game Competitions Won</span>
                  <span className="font-semibold text-apple-blue text-lg">Top 50 Global</span>
                </div>
                <div className="flex justify-between items-center py-2 border-b border-apple-border-primary">
                  <span className="text-apple-text-secondary font-medium">Current GPA</span>
                  <span className="font-semibold text-apple-blue text-lg">3.5</span>
                </div>
                <div className="flex justify-between items-center py-2">
                  <span className="text-apple-text-secondary font-medium">Automation Scripts Created</span>
                  <span className="font-semibold text-apple-blue text-lg">15+</span>
                </div>
              </div>
            </Card>

            <Card className="card-apple">
              <h3 className="text-apple-title font-semibold mb-6 text-apple-text-primary">Education</h3>
              <div className="space-apple-md">
                <div>
                  <h4 className="font-semibold text-apple-text-primary text-lg">University of Colorado Colorado Springs</h4>
                  <p className="text-apple-text-secondary font-medium">Bachelor of Science - Electrical Engineering</p>
                  <p className="text-sm text-apple-blue font-medium mt-1">2023 - 2027 | GPA: 3.5</p>
                </div>
                <div className="mt-4 pt-4 border-t border-apple-border-primary">
                  <p className="text-sm text-apple-text-secondary font-light leading-relaxed">
                    Advanced Coursework in Differential Equations Laplace Transforms, 
                    Circuits I, and Physics III
                  </p>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </section>
  );
};